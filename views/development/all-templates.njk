{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}

{% extends "shared/base.njk" %}
{% set pageTitleKey = "All templates" %}

{% if errorState %}
    {% set errorText = 'Select a page and a context if appropriate.' %}
{% endif %}

{% block content %}
  <form id="pageSelectForm" action="/dev/all-templates" method="POST">
    <input type="hidden" name="_csrf" value="{{ csrfToken }}">

    {% set templateRadioConfig = [] %}
    {% for page, contexts in templatesWithContextRadioOptions %}
      {% set contextRadioId = ['pageContext', page] | join %}
      {% set conditional = {
        html: govukRadios({
          idPrefix: contextRadioId,
          name: 'pageContext',
          classes: "govuk-radios--small",
          fieldset: {
            legend: {
              text: 'Choose a context:',
              classes: "govuk-fieldset__legend--s"
            }
          },
          items: contexts })
      } if contexts | length else undefined %}

      {% set templateRadioConfig = (
          templateRadioConfig.push({
            text: page,
            value: page,
            conditional: conditional
          }),
          templateRadioConfig ) %}

    {% endfor %}

    {{ govukRadios({
      name: "template",
      fieldset: {
        legend: {
          text: "Select a Page",
          classes: "govuk-fieldset__legend--m"
        }
      },
      items: templateRadioConfig
    }) }}

    {{ govukRadios({
      name: "language",
      fieldset: {
        legend: {
          text: "Select a Language",
          classes: "govuk-fieldset__legend--m"
        }
      },
      items: [
        {
          value: "en",
          text: "English",
          checked: true
        },
        {
          value: "cy",
          text: "Welsh"
        }
      ]
    }) }}

    {{ govukCheckboxes({
      name: "hasErrorState",
      items: [
        {
          text: "Error state",
          value: "true"
        }
      ]
    }) }}

    {{ govukButton({
      text: "Go"
    }) }}
  </form>
{% endblock %}
